name: E2E Cross-version Tests

on: [push]

jobs:

  upgrade:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    strategy:
      matrix:
        upgrade: [
          { source: v0.41.3.1, target: v0.42.2 },
          { source: v0.42.0, target: v0.43.4 }
        ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Prepare front-end environment
      uses: ./.github/actions/prepare-frontend
    - name: Start Metabase ${{ matrix.upgrade.source }}
      run: docker run -d -v $PWD/my-metabase:/metabase.db -p 3000:3000 --name metabase-${{ matrix.upgrade.source }} metabase/metabase:${{ matrix.upgrade.source }}
    - name: Wait for Metabase to start on port 3000
      run: while ! curl -s 'http://localhost:3000/api/health' | grep '{"status":"ok"}'; do sleep 1; done
    - name: Prepare cypress environment
      uses: ./.github/actions/prepare-cypress
    - name: Run Cypress on the source
      run: |
        yarn cypress run \
          --browser chrome \
          --config-file frontend/test/metabase/scenarios/cross-version/source/cypress.json \
          --spec frontend/test/metabase/scenarios/cross-version/source/${{ matrix.upgrade.source }}/**/*.cy.spec.js
    - name: Stop Metabase ${{ matrix.upgrade.source }}
      run: docker stop metabase-${{ matrix.upgrade.source }}

    - name: Start Metabase ${{ matrix.upgrade.target }}
      run: docker run -d -v $PWD/my-metabase:/metabase.db -p 3001:3000 --name metabase-${{ matrix.upgrade.target }} metabase/metabase:${{ matrix.upgrade.target }}
    - name: Wait for Metabase to start on port 3001
      run: while ! curl -s 'http://localhost:3001/api/health' | grep '{"status":"ok"}'; do sleep 1; done
    - name: Run Cypress on the target
      run: |
        yarn cypress run \
          --browser chrome \
          --config-file frontend/test/metabase/scenarios/cross-version/target/cypress.json \
          --spec frontend/test/metabase/scenarios/cross-version/target/${{ matrix.upgrade.target }}/**/*.cy.spec.js
